<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liu.studentmanager.mapper.ScoreMapper">

    <resultMap type="com.liu.studentmanager.domain.Score" id="ScoreInfo">
        <result column="id" property="id"/>
        <result column="clazz_id"  property="clazzId"/>
        <result column="course_id" property="courseId"/>
        <result column="student_id" property="studentId"/>
        <result column="score" property="score"/>
        <result column="remark" property="remark"/>
        <result column="clazzName" property="clazzName"/>
        <result column="courseName" property="courseName"/>
        <result column="studentName" property="studentName"/>
    </resultMap>

    <select id="queryList" resultMap="ScoreInfo" >
        <!-- 根据条件查询 图书的所有信息 -->
        SELECT *
        from s_score
        <where>
            <if test="clazzid!=null"> and clazz_id = #{clazzid} </if>
            <if test="courseid!=null"> and course_id = #{courseid} </if>
            <if test="studentid!=null"> and student_id = #{studentid} </if>
        </where>
        limit #{startIndex},#{pagesize}
    </select>

    <select id="queryCount" resultType="int" >
        select count(*) from s_score
        <where>
            <if test="clazzid!=null"> and clazz_id = #{clazzid} </if>
            <if test="courseid!=null"> and course_id = #{courseid} </if>
            <if test="studentid!=null"> and student_id = #{studentid} </if>
        </where>
    </select>

    <insert id="addScore" parameterType="Score">
        insert into s_score (clazz_id,course_id,student_id,score,remark)
        values(#{clazzId},#{courseId},#{studentId},#{score},#{remark})
    </insert>

    <delete id="deleteScore" parameterType="int">
        delete from s_score where id = #{id}
    </delete>

    <!--    <update id="editStudent" parameterType="Student">-->
    <!--        update s_student-->
    <!--        <set>-->
    <!--            <if test="username != null">-->
    <!--                username = #{username},-->
    <!--            </if>-->
    <!--            <if test="clazzId != null">-->
    <!--                clazz_id = #{clazzId},-->
    <!--            </if>-->
    <!--            <if test="sex != null">-->
    <!--                sex = #{sex},-->
    <!--            </if>-->
    <!--            <if test="mobile != null">-->
    <!--                mobile = #{mobile},-->
    <!--            </if>-->
    <!--            <if test="qq != null">-->
    <!--                qq = #{qq},-->
    <!--            </if>-->
    <!--            <if test="photo != null">-->
    <!--                photo = #{photo},-->
    <!--            </if>-->
    <!--        </set>-->
    <!--        where id = #{id}-->
    <!--    </update>-->


    <!--    <select id="findById" parameterType="int" resultType="Student">-->
    <!--        select * from s_student where id = #{sid}-->
    <!--    </select>-->

    <!--    <select id="findByStudent" parameterType="Student" resultType="Student">-->
    <!--        select * from s_student where username = #{username} and password = #{password}-->
    <!--    </select>-->

    <select id="isScore" parameterType="Score" resultMap="ScoreInfo">
        select * from s_score where clazz_id = #{clazzId} and
                                    course_id = #{courseId} and
                                    student_id = #{studentId}
    </select>

    <update id="editScore" parameterType="Score">
        update  s_score set clazz_id = #{clazzId},
                            course_id = #{courseId},
                            student_id = #{studentId},
                            score = #{score},
                            remark = #{remark}
                        where id = #{id}
    </update>

    <select id="getAll" parameterType="Score" resultMap="ScoreInfo">
        select  s_score.*,
                s_clazz.name as clazzName,
                s_course.name as courseName,
                s_student.username as studentName
        from s_score,s_clazz,s_course,s_student
        <where>
            s_score.clazz_id = s_clazz.id and s_score.course_id = s_course.id and s_score.student_id = s_student.id
            <if test="clazzId!=null and clazzId != ''"> and clazz_id = #{clazzId} </if>
            <if test="courseId!=null and courseId != ''"> and course_id = #{courseId} </if>
            <if test="studentId!=null and studentId != ''"> and student_id = #{studentId} </if>
        </where>
    </select>

    <select id="getAvgStats" parameterType="int" resultType="ScoreStats">
        select max(s_score.score) as max_score,
               avg(s_score.score) as avg_score,
               min(s_score.score) as min_score,
               s_course.name as courseName
        from s_score,s_course
        where s_score.course_id=s_course.id
          and s_score.course_id = #{courseid}
    </select>


</mapper>